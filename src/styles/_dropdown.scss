.c-combobox__dropdown {
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  background: $combobox--background-color;
  border: $combobox--border;
  border-radius: .25em;
  box-sizing: border-box;
  line-height: 1.1em;
  margin: 0;
  max-height: $combobox--max-items * ($combobox--item--line-height + .5em);
  overflow-x: hidden;
  overflow-y: auto;
  padding: 0;
  position: absolute;
  transform-origin: 50% 50%;
  z-index: $combobox--zindex + 1;
}

.c-combobox__item {
  background-color: $combobox--background-color;
  color: $combobox--item--color;
  cursor: pointer;
  min-width: 10em;
  overflow: hidden;
  padding: .25em .5em;
  position: relative;
  text-overflow: ellipsis;
  transition: background-color $combobox--animation-time;
  user-select: none;
  white-space: nowrap;
  width: inherit;

  &:hover,
  &.is-selected-path:hover {
    background-color: $combobox--background-color--hover;
    color: invert($combobox--item--color);
  }

  &.has-children {
    padding-right: 1.5em;

    // arrow indicating that item has children
    &::after {
      border: .25em solid transparent;
      border-left: .5em solid $combobox--border-color;
      border-right: .5em;
      content: '';
      margin-left: -.25em;
      position: absolute;
      right: .5em;
      top: .5em;
    }

    &:hover::after {
      border-left-color: invert($combobox--item--color);
    }
  }

  &.is-selected-path,
  &.is-selected-path.is-not-selectable {
    background-color: transparentize($combobox--border-color, .9);
  }

  &.has-divider-after {
    border-bottom: 1px solid $combobox--border-color;
  }

  &.has-divider-before {
    border-top: 1px solid $combobox--border-color;
  }

  &.is-not-selectable {
    background-color: $combobox--background-color;
    color: $combobox--border-color;

    &:hover {
      background-color: $combobox--background-color;
      color: $combobox--border-color;
      cursor: default;
    }

    &:hover::after {
      border-left-color: $combobox--border-color;
    }
  }
}
